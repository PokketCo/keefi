name: Flutter Android Build and Release

on:
  push:
    branches:
      - main

jobs:
  android-release-build:
    name: Android Release Build
    runs-on: ubuntu-latest
    container: ghcr.io/niklaslehnfeld/flutter-essentials-docker:master
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Decode keystore
      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      # 3. Create key.properties
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=android/app/keystore.jks" >> android/key.properties

      # 4. Build APK and AAB
      - name: Build APK and AAB
        uses: NiklasLehnfeld/flutter-android-build-action@v2
        id: android-build
        with:
          release: true
          keystore: ${{ secrets.KEYSTORE }}
          keystore-pwd: "${{ secrets.KEYSTORE_PASSWORD }}"
          key-pwd: "${{ secrets.KEY_PASSWORD }}"

      # 5. Archive APK
      - name: Archive APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: ${{ steps.android-build.outputs.apk-path }}

      # 6. Archive AAB
      - name: Archive AAB
        uses: actions/upload-artifact@v3
        with:
          name: release-aab
          path: ${{ steps.android-build.outputs.aab-path }}

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [android-release-build]
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Download APK artifact
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: release-apk

      # 3. Download AAB artifact
      - name: Download AAB artifact
        uses: actions/download-artifact@v3
        with:
          name: release-aab

      # 4. Extract version number
      - name: Extract Version Number
        id: version
        uses: NiklasLehnfeld/flutter-version-number-action@v2

      # 5. Create GitHub Release
      - name: Publish GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: ${{ steps.version.outputs.version-number }}
          title: ${{ steps.version.outputs.version-number }}
          files: |
            *.apk
            *.aab
